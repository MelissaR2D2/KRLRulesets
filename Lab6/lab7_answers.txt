1. Yes, a sensor can be in more than one collection based on the code I wrote. The sensor has the ability to accept multiple subscriptions, and it can respond to requests for temperatures (both in this lab and the last lab) regardless of the number of possible sensor managers requesting information. The scatter-gather pattern helps this to work, since the sensor only has to react to events of the appropriate type, without worrying about where those responses are going.

2. If I wanted to ensure only certain picos can raise an event that causes a temperature report to be generated, I would use channel policies and make it so that only channels that go to the appropriate pico(s) accept events that generate a temperature report. Other picos would not have access to those channels, so they would not be able to ask for a report.

3. The debug logs show that my scatter-gather system reported because I can see the sensor management pico reacting to the new_report event, and then if I go to the logs of each individual pico, I can see it responding to the management pico's individual report requests (scatter). Then, if I go back to the sensor management pico, I can see the get report rule firing each time a new report comes in (gather). 

4. Right now, I can't know the report is done, only how many sensors have reported. Obviously, if all sensors have responded, then the report is done, but if I want to account for sensors that may fail to respond, I would probably just add a timeout and then call the report done, since we can't expect the sensor to be able to notify us that it can't/won't respond. For additional surety, I would have the management pico do 1-2 retries after the first timeout before assuming the sensor won't respond and the report is done.

5. Oh, I guess I already answered this question in the prior question. I would recover by having the sensor management pico send 1-2 retries and then just leave the report incomplete if the sensor(s) still aren't responding. As long as the number of responding sensors are reported correctly in the report the data is still useable. If for some reason it's essential that every sensor respond every time, I guess we could either have the report be delayed indefinitely, or implement some kind of self-healing system where non-responsive sensors are eventually cut off.